[{"F:\\Companies\\Zonolith\\shopping_cart\\src\\index.js":"1","F:\\Companies\\Zonolith\\shopping_cart\\src\\App.js":"2","F:\\Companies\\Zonolith\\shopping_cart\\src\\Routes.js":"3","F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\signUp\\index.js":"4","F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\login\\index.js":"5","F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\signUp\\Textfield.js":"6","F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\Cart.js":"7","F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\Home.js":"8","F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\utility.js":"9"},{"size":222,"mtime":1612105625917,"results":"10","hashOfConfig":"11"},{"size":286,"mtime":1612106427744,"results":"12","hashOfConfig":"11"},{"size":1593,"mtime":1612109272511,"results":"13","hashOfConfig":"11"},{"size":6151,"mtime":1612106935006,"results":"14","hashOfConfig":"11"},{"size":5916,"mtime":1612107947288,"results":"15","hashOfConfig":"11"},{"size":1017,"mtime":1610895857000,"results":"16","hashOfConfig":"11"},{"size":153,"mtime":1612108788162,"results":"17","hashOfConfig":"11"},{"size":1068,"mtime":1612110186018,"results":"18","hashOfConfig":"11"},{"size":1658,"mtime":1612112203991,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qfhue9",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Companies\\Zonolith\\shopping_cart\\src\\index.js",[],"F:\\Companies\\Zonolith\\shopping_cart\\src\\App.js",[],"F:\\Companies\\Zonolith\\shopping_cart\\src\\Routes.js",[],"F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\signUp\\index.js",["41","42","43","44","45","46","47","48","49","50"],"import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Textfild from \"./Textfield\"\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {Redirect} from \"react-router-dom\"\n\n\nimport \"./index.css\";\n\nconst styles = theme => ({\n    email: {\n        background: '#48a026',\n        color: 'white',\n    },\n    gmail: {\n        background: '#4385f5',\n    },\n\n});\n\n\n\n\nclass index extends Component {\n    constructor(props) {\n        super(props);\n        this.name=\"\";\n        this.state = {\n            showPassword: false,\n            email: '',\n            name: '',\n            password: '',\n            role:'student',\n            loader:false,\n            login:false,\n            error:false,\n            msg:\"All fields are Required!!!\"\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value,\n            error:false\n        });\n    };\n    \n    \n    signUp=()=>{\n       \n     \n      localStorage.setItem(this.state.email,this.state.password);\n\n       \n       \n    }\n\n\n\n\n\n    render() {\nconsole.log(this.state);\n        const {\n            email,\n            name,\n            password,\n            role,\n            loader,\n            login,msg\n\n\n        } = this.state;\n        const { classes } = this.props; \n        if(login)\n        return <Redirect  to={\"login\"}/>  \n\n        return (\n<div className={\"form\"}>         \n           <Card style={{ boxShadow: 'none',width:\"20rem\" }}>\n                    <CardContent>\n                        <CssBaseline />\n\n                        <Typography\n                            variant='h4'\n                            style={{\n                                fontWeight: '500',\n                                textAlign: 'center',\n                                marginBottom: '1rem',\n                                marginTop: '1rem',\n                            }}\n                        >\n                            Sign Up\n                           </Typography>\n\n\n\n                       \n                               <Textfild state={this.state}></Textfild>\n                           \n                                <TextField\n                                    variant='outlined' \n                                    margin='normal'\n                                    fullWidth\n                                    size='small'\n                                    value={email}\n                                    name='email'\n                                    label='Email Address'\n                                \n                                    id='email'\n                                  \n                                    autoComplete='email'\n                                    onChange={this.handleChange}\n                                />\n                          \n                    \n                                <TextField\n                                    variant='outlined'\n                                    margin='normal'\n                                    fullWidth\n                                    size='small'\n                                    value={password}\n                                    name='password'\n                                    label='Password'\n                                    type=\"password\"\n                                    id='password'\n                                   \n                                    autoComplete='password'\n                                    onChange={this.handleChange}\n                                />\n                          \n                      \n                        \n                               {this.state.loader?<div><LinearProgress style={{marginBottom:\"10px \"}}/><LinearProgress color={\"secondary\"}/></div>:<Button\n                                    style={{marginBottom:\"20px\"}}\n                                    type='submit'\n                                    id='signin'\n                                    variant='contained'\n                                    color='primary'\n                                    fullWidth\n                                    onClick={this.signUp}\n                                >\n                                    Sign Up\n                              </Button>\n\n                             \n                              \n                             }\n                             { this.state.error&&<div style={{color:\"red\",\n                            textAlign:\"center\",\n                            fontWeight:\"bold\"\n                            \n                            }}>{msg}</div>}\n                           <Button\n                                \n                                type='submit'\n                                id='signin'\n                                variant='contained'\n                                color='primary'\n                                fullWidth\n                                onClick={()=>{\n                                    this.setState({\n                                        ...this.state,\n                                       \n                                        login:true\n                                    })\n                                }}\n                            >\n                               Login\n                          </Button>\n\n\n                    </CardContent>\n                </Card>\n</div>\n          \n\n        );\n    }\n}\n\n\n\n\nexport default withStyles(styles)(index);\n\n\n\n",["51","52"],"F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\login\\index.js",["53","54"],"import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button'; \n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {Redirect} from \"react-router-dom\"\nimport \"./index.css\";\n\nconst styles = theme => ({\n    email: {\n        background: '#48a026',\n        color: 'white',\n    },\n    gmail: {\n        background: '#4385f5',\n    },\n\n});\n\n\n\n\nclass index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPassword: false,\n            email: '',\n            name: '',\n            password: '',\n\n            loader:false,\n            signup:false,\n            error:false,\n            msg:\"Incorrect UserName Passcode!!\",\n            loggedIn:false\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    login=()=>{\n       \n         \n     if(!localStorage.getItem(this.state.email)){\n       return   console.log(\"User doesn't exist\");\n     }\n     if(localStorage.getItem(this.state.email)!=this.state.password){\n       return console.log(\"Incorrect Password!!\");\n    }\n    else{\n        localStorage.setItem(\"loggedIn\",true)\n        this.props.setLoggedIn(true);\n        return console.log(\"Success!!!\");\n        \n    }\n        \n  \n      }\n\n\n\n\n    render() {\n        console.log(this.props);\n        const {\n            email,\n            password,\n            msg,\n            loader,\n            loggedIn,\n            signup\n\n\n        } = this.state;\n\n\n        if(loggedIn){\n            this.props.setLoggedIn(true);\n }\n\n        if(signup)\n        return <Redirect  to={\"signup\"}/>  \n\n      \n    \n        return (\n<div className={\"form\"}>         \n           <Card style={{ boxShadow: 'none',width:\"20rem\" }}>\n                    <CardContent>\n                        <CssBaseline />\n\n                        <Typography\n                            variant='h4'\n                            style={{\n                                fontWeight: '500',\n                                textAlign: 'center',\n                                marginBottom: '1rem',\n                                marginTop: '1rem',\n                            }}\n                        >\n                            Login\n                           </Typography>\n   \n                                <TextField\n                                    variant='outlined'\n                                    margin='normal'\n                                    fullWidth\n                                    size='small'\n                                    value={email}\n                                    name='email'\n                                    label='Email Address'\n                                \n                                    id='email'\n                                  \n                                    autoComplete='email'\n                                    onChange={this.handleChange}\n                                />\n                          \n                    \n                                <TextField\n                                    variant='outlined'\n                                    margin='normal'\n                                    fullWidth\n                                    size='small'\n                                    value={password}\n                                    name='password'\n                                    label='Password'\n                                  \n                                    id='password'\n                                   \n                                    autoComplete='password'\n                                    onChange={this.handleChange}\n                                />\n                          \n                      \n                        \n                                {loader?<div><LinearProgress style={{marginBottom:\"10px \"}}/><LinearProgress color={\"secondary\"}/></div>:<Button\n                                     style={{marginBottom:\"20px\"}}\n                                    type='submit'\n                                    id='signin'\n                                    variant='contained'\n                                    color='primary'\n                                    fullWidth\n                                    onClick={this.login}\n                                >\n                                   Login\n                              </Button>}\n\n                              <Button\n                                 onClick={()=>{\n                                    this.setState({\n                                        ...this.state,\n                                       \n                                        signup:true\n                                    })\n                                }}\n                                type='submit'\n                                id='signin'\n                                variant='contained'\n                                color='primary'\n                                fullWidth\n                            >\n                               Sign Up\n                          </Button>\n\n                          { this.state.error&&<div style={{color:\"red\",\n                            textAlign:\"center\",\n                            fontWeight:\"bold\"\n                            \n                            }}>{msg}</div>}\n                          \n\n\n                    </CardContent>\n                </Card>\n</div>\n          \n\n        );\n    }\n}\n\n\n\n\nexport default withStyles(styles)(index);\n\n\n\n","F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\signUp\\Textfield.js",[],"F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\Cart.js",[],"F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\Home.js",["55","56","57"],"F:\\Companies\\Zonolith\\shopping_cart\\src\\components\\utility.js",[],{"ruleId":"58","severity":1,"message":"59","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":10,"column":8,"nodeType":"60","messageId":"61","endLine":10,"endColumn":17},{"ruleId":"58","severity":1,"message":"63","line":12,"column":8,"nodeType":"60","messageId":"61","endLine":12,"endColumn":18},{"ruleId":"58","severity":1,"message":"64","line":13,"column":8,"nodeType":"60","messageId":"61","endLine":13,"endColumn":19},{"ruleId":"58","severity":1,"message":"65","line":14,"column":8,"nodeType":"60","messageId":"61","endLine":14,"endColumn":16},{"ruleId":"58","severity":1,"message":"66","line":15,"column":8,"nodeType":"60","messageId":"61","endLine":15,"endColumn":14},{"ruleId":"58","severity":1,"message":"67","line":79,"column":13,"nodeType":"60","messageId":"61","endLine":79,"endColumn":17},{"ruleId":"58","severity":1,"message":"68","line":81,"column":13,"nodeType":"60","messageId":"61","endLine":81,"endColumn":17},{"ruleId":"58","severity":1,"message":"69","line":82,"column":13,"nodeType":"60","messageId":"61","endLine":82,"endColumn":19},{"ruleId":"58","severity":1,"message":"70","line":87,"column":17,"nodeType":"60","messageId":"61","endLine":87,"endColumn":24},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":59,"column":47,"nodeType":"77","messageId":"78","endLine":59,"endColumn":49},{"ruleId":"58","severity":1,"message":"79","line":6,"column":12,"nodeType":"60","messageId":"61","endLine":6,"endColumn":16},{"ruleId":"58","severity":1,"message":"80","line":6,"column":17,"nodeType":"60","messageId":"61","endLine":6,"endColumn":26},{"ruleId":"81","severity":1,"message":"82","line":18,"column":16,"nodeType":"83","endLine":18,"endColumn":31},"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'name' is assigned a value but never used.","'role' is assigned a value but never used.","'loader' is assigned a value but never used.","'classes' is assigned a value but never used.","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'cart' is assigned a value but never used.","'cartItems' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]